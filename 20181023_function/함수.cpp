#include <stdio.h>
int gVar = 100;								//이 변수는 모든 범위에서 유효하다.(전역변수=global variable);권장x
//함수 sum()
//입력: 두 정수
//출력: 두 정수의 합
//부수효과: 없음
int sum(int a, int b) {	//함수선언: int ~					//여기부터
	int c;				//함수본체:{}								 
																		
	c = a + b; a = 100;
	return c;
}															//여기까지 함수 정의
	/*모든 변수이름은 소스코드상에서 유효범위()가 있다.
															따라서 a,b는 괄호안에서만 유효하다.(x는 유효하지 않음)*/
															//변수선언에서는 변수의 자료형, 변수의 이름 선언을 선언하였다.
															/*함수선언에서도 마찬가지로 sum()이라는 함수의 이름을 선언하였다.
															괄호()안은 매개변수이다.
															따라서 매개변수의 갯수와 자료형을 알 수 있다. (2개, int, int)
															그에 더해 반환형이라는 반환값의 자료형을 알 수 있다.(int)*/
//함수: goodPrint()
//입력: 없음
//출력: 없음
//부수효과: 화면에 good 출력
void goodPrint() {
	printf("good");
}
int main() {						//메인도 함수!
	int x = 10, y = 20, z;									//x를 위한 공간이 할당됨(연속집4개를 x라 하고 int형식의 자료가 저장되고 그 자료는 10이다)
															//x:네모[10]int     x는 변수이름 int는 변수의 자료형 네모안은 변수값
	z = sum(x, y);//함수 호출;이때 매개변수에 대한 공간이 만들어지고 함수가 끝날때 그 공간은 소멸함.이를 auto variable 이라한다.
	printf("z=%d\n", z);
	goodPrint();
//	return 0;
}
/*x,y,z를 위한 공간이 할당된다. 
(매개변수를 위한) 추가 메모리가 할당된다.
확보한 공간에 매개변수의 값을 복사한다.
매개변수의 이름을 지정한다.
함수의 리턴값은 다른곳에 저장되고 매개변수를 위한 메모리는 소멸한다.*/
/*디버그:버그를 없앤다
디버거: 빨간점 왼쪽 회색창 더블클릭
디버거는 위의 로컬 윈도우즈 디버거 클릭
순서가 어떻게 되는지 한줄한줄 확인가능*/